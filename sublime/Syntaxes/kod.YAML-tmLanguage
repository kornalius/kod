# [PackageDev] target_format: plist, ext: tmLanguage
name: kod
scopeName: source.kod
fileTypes: [.kod]
uuid: c99f17c6-9642-4847-b3ec-16e0580ebe16
# foldingStartMarker: ^\s*(if|else|for|while)\b
# foldingStopMarker: ^\s*end\b}

patterns:

  - name: keyword.control
    match: (if|else|for|to|end|while|break|continue|return|let|class|new|super)\b

  - name: constant.language
    match: \b(true|false|null|nil)\b

  - name: constant.other
    match: (\#[A-Za-z_][A-Za-z0-9_]*)

  - name: support.other
    match: (\#"[^"]*")

  - name: keyword.operator
    match: (=)[^=>]

  - name: keyword.operator
    match: (let)\s*([A-Za-z_][A-Za-z0-9_]*)
    captures:
       '1': { name: keyword.control }
       '2': { name: variable.language meta.label.identifier }

  - name: keyword.other
    match: ([A-Za-z_][A-Za-z0-9_]*)\s*(=>)
    captures:
      '1': { name: entity.name meta.function.identifier }
      '2': { name: keyword.operator }

  - name: keyword.other
    match: (\:[A-Za-z_][A-Za-z0-9_]*)\s*(=>)
    captures:
      '1': { name: entity meta.function.identifier }
      '2': { name: keyword.operator }

  - name: keyword.operator
    match: (==|\!=|<|<=|>|>=)

  - name: keyword.operator
    match: (\+|\-|\/[^\/]|\*|\!|\&|\|)=?

  - name: punctuation.separator
    match: (\[|\]|\{|\}|\(|\)|\,|\;|\.)

  - name: comment.line
    match: (\/\/[^\r\n]*)

  - name: entity.name
    match: ([A-Za-z_][A-Za-z0-9_]*)(?=\s*\()

  - name: entity.name
    match: (?=(\.|\@)([A-Za-z_][A-Za-z0-9_]*)(?=\s*\()

  - name: variable.language
    match: (?=\.|\@)([A-Za-z_][A-Za-z0-9_]*)(?!\s*\()

  - name: storage.type
    match: (\:[A-Za-z_][A-Za-z0-9_]*)

  - name: string.quoted
    begin: '"'
    end: '"'

  - name: constant.other
    match: \\.

  - name: constant.character
    match: \'.\'

  - name: constant.numeric
    match: \$[0-9a-fA-F]+

  - name: constant.numeric
    match: 0x[0-9a-fA-F]+

  - name: constant.numeric
    match: \b\d+\b
